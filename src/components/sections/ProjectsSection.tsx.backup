'use client';

import { motion, AnimatePresence } from 'framer-motion';
import { ExternalLink, Github, Star, X, Calendar, Code, Users, CheckCircle, Gamepad2, Smartphone, Bot, MessageSquare, Car, Lightbulb, Presentation, BarChart3, Settings } from 'lucide-react';
import { useState } from 'react';
import Portal from '@/components/Portal';
import { Project } from '@/types/project';
import { projects } from '@/data/projects';

// Map icon names to Lucide components
const iconMap: { [key: string]: React.ComponentType<{ className?: string }> } = {
  Gamepad2,
  Smartphone,
  Bot,
  MessageSquare,
  Car,
  Lightbulb,
  Users,
  Presentation,
  BarChart3,
  Settings,
};

export default function ProjectsSection() {
  const [hoveredProject, setHoveredProject] = useState<number | null>(null);
  const [selectedProject, setSelectedProject] = useState<Project | null>(null);

  return (
    <>
      <div className="space-y-6">
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
        >
          <h2 className="text-3xl font-bold text-transparent bg-clip-text mb-2" style={{backgroundImage: 'linear-gradient(to right, #03001e, #7303c0, #ec38bc, #fdeff9)', filter: 'drop-shadow(0 0 15px rgba(236, 56, 188, 0.5))'}}>
            Projects
          </h2>
        <p className="text-gray-400 mb-6">
          Here are some of the professional projects I have worked on throughout my career. Each project showcases different technologies and problem-solving approaches.
        </p>
      </motion.div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-5">
        {projects.map((project, index) => (
          <motion.div
            key={project.title}
            initial={{ opacity: 0, clipPath: 'inset(0 100% 0 0)' }}
            animate={index < 4 ? { opacity: 1, clipPath: 'inset(0 0% 0 0)' } : undefined}
            whileInView={index >= 4 ? { opacity: 1, clipPath: 'inset(0 0% 0 0)' } : undefined}
            viewport={index >= 4 ? { once: true, margin: '0px 0px -200px 0px' } : undefined}
            transition={{ delay: index < 4 ? index * 0.15 : 0, duration: 0.6, ease: [0.4, 0, 0.2, 1] }}
            onMouseEnter={() => setHoveredProject(index)}
            onMouseLeave={() => setHoveredProject(null)}
            onClick={() => setSelectedProject(project)}
            className="bg-gray-700/30 rounded-lg border border-gray-600 hover:border-purple-500 transition-all duration-300 overflow-hidden card-hover cursor-pointer"
          >
            <div className="p-6">
              <div className="flex items-start justify-between mb-4">
                <div className="bg-purple-600/20 p-3 rounded-lg border border-purple-500/30">
                  {(() => {
                    const IconComponent = iconMap[project.icon];
                    return IconComponent ? <IconComponent className="w-8 h-8 text-purple-400" /> : null;
                  })()}
                </div>
                <div className="flex items-center gap-2">
                  <span className="flex items-center text-gray-400 text-sm">
                    <Star className="w-4 h-4 mr-1 fill-yellow-500 text-yellow-500" />
                    {project.stars}
                  </span>
                </div>
              </div>

              <h3 className="text-xl font-semibold text-purple-300 mb-2">{project.title}</h3>
              
              {project.duration && (
                <p className="text-purple-400 text-xs mb-2">Duration: {project.duration}</p>
              )}
              
              <p className="text-gray-400 text-sm mb-4 line-clamp-3">{project.description}</p>

              <div className="flex flex-wrap gap-2 mb-4">
                {project.tags.map((tag) => (
                  <span
                    key={tag}
                    className="px-2 py-1 bg-purple-600/20 text-purple-300 rounded text-xs border border-purple-500/30"
                  >
                    {tag}
                  </span>
                ))}
              </div>

              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: hoveredProject === index ? 1 : 0 }}
                className="flex gap-3 pt-4 border-t border-gray-600"
              >
                <a
                  href={project.github}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="flex items-center gap-1 text-sm text-gray-300 hover:text-purple-400 transition-colors"
                >
                  <Github className="w-4 h-4" />
                  <span>Code</span>
                </a>
                {project.demo !== '#' && (
                  <a
                    href={project.demo}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="flex items-center gap-1 text-sm text-gray-300 hover:text-purple-400 transition-colors"
                  >
                    <ExternalLink className="w-4 h-4" />
                    <span>Live Demo</span>
                  </a>
                )}
              </motion.div>
            </div>
          </motion.div>
        ))}
      </div>
      </div>

      {/* Project Modal - Portal to body for true full screen */}
      <AnimatePresence>
        {selectedProject && (
          <Portal>
            {/* Full Screen Backdrop with Blur */}
            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              exit={{ opacity: 0 }}
              onClick={() => setSelectedProject(null)}
              className="fixed inset-0 bg-black/70 backdrop-blur-md z-[9999]"
            />
            
            {/* Modal Container - Centered */}
            <div className="fixed inset-0 z-[10000] flex items-center justify-center p-4 pointer-events-none">
              <motion.div
                initial={{ scale: 0.9, opacity: 0, y: 50 }}
                animate={{ scale: 1, opacity: 1, y: 0 }}
                exit={{ scale: 0.9, opacity: 0, y: 50 }}
                transition={{ type: 'spring', damping: 25, stiffness: 300 }}
                onClick={(e) => e.stopPropagation()}
                className="bg-gray-800 rounded-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto border-2 border-purple-500/50 shadow-2xl pointer-events-auto"
              >
              {/* Modal Header */}
              <div className="sticky top-0 bg-gradient-to-r from-purple-900/90 to-pink-900/90 backdrop-blur-md p-6 border-b border-purple-500/30">
                <div className="flex items-start justify-between">
                  <div className="flex items-center gap-4">
                    <div className="bg-purple-600/30 p-4 rounded-xl border border-purple-500/40">
                      {(() => {
                        const IconComponent = iconMap[selectedProject.icon];
                        return IconComponent ? <IconComponent className="w-12 h-12 text-purple-300" /> : null;
                      })()}
                    </div>
                    <div>
                      <h2 className="text-3xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-purple-300 to-pink-300">
                        {selectedProject.title}
                      </h2>
                      <div className="flex items-center gap-4 mt-2">
                        <span className="flex items-center text-purple-300 text-sm">
                          <Calendar className="w-4 h-4 mr-1" />
                          {selectedProject.duration}
                        </span>
                        <span className="flex items-center text-yellow-400 text-sm">
                          <Star className="w-4 h-4 mr-1 fill-yellow-400" />
                          {selectedProject.stars} stars
                        </span>
                      </div>
                    </div>
                  </div>
                  <button
                    onClick={() => setSelectedProject(null)}
                    className="text-gray-400 hover:text-white transition-colors p-2 hover:bg-white/10 rounded-lg"
                  >
                    <X className="w-6 h-6" />
                  </button>
                </div>
              </div>

              {/* Modal Content */}
              <div className="p-6 space-y-6">
                {/* Description */}
                <div>
                  <h3 className="text-xl font-semibold text-purple-300 mb-3 flex items-center gap-2">
                    <Code className="w-5 h-5" />
                    About the Project
                  </h3>
                  <p className="text-gray-300 leading-relaxed">
                    {selectedProject.fullDescription || selectedProject.description}
                  </p>
                </div>

                {/* Technologies */}
                <div>
                  <h3 className="text-xl font-semibold text-purple-300 mb-3">Technologies Used</h3>
                  <div className="flex flex-wrap gap-2">
                    {selectedProject.tags.map((tag) => (
                      <span
                        key={tag}
                        className="px-4 py-2 bg-purple-600/30 text-purple-200 rounded-lg text-sm border border-purple-500/50 hover:bg-purple-600/50 transition-colors"
                      >
                        {tag}
                      </span>
                    ))}
                  </div>
                </div>

                {/* Features */}
                {selectedProject.features && (
                  <div>
                    <h3 className="text-xl font-semibold text-purple-300 mb-3 flex items-center gap-2">
                      <CheckCircle className="w-5 h-5" />
                      Key Features
                    </h3>
                    <ul className="space-y-2">
                      {selectedProject.features.map((feature, idx) => (
                        <motion.li
                          key={idx}
                          initial={{ opacity: 0, x: -20 }}
                          animate={{ opacity: 1, x: 0 }}
                          transition={{ delay: idx * 0.1 }}
                          className="flex items-start text-gray-300"
                        >
                          <span className="text-purple-400 mr-2 mt-1">▹</span>
                          <span>{feature}</span>
                        </motion.li>
                      ))}
                    </ul>
                  </div>
                )}

                {/* Responsibilities */}
                {selectedProject.responsibilities && (
                  <div>
                    <h3 className="text-xl font-semibold text-purple-300 mb-3 flex items-center gap-2">
                      <Users className="w-5 h-5" />
                      My Responsibilities
                    </h3>
                    <ul className="space-y-2">
                      {selectedProject.responsibilities.map((resp, idx) => (
                        <motion.li
                          key={idx}
                          initial={{ opacity: 0, x: -20 }}
                          animate={{ opacity: 1, x: 0 }}
                          transition={{ delay: idx * 0.1 }}
                          className="flex items-start text-gray-300"
                        >
                          <span className="text-pink-400 mr-2 mt-1">•</span>
                          <span>{resp}</span>
                        </motion.li>
                      ))}
                    </ul>
                  </div>
                )}

                {/* Team Size */}
                {selectedProject.teamSize && (
                  <div className="bg-purple-900/20 p-4 rounded-lg border border-purple-500/30">
                    <p className="text-purple-300 flex items-center gap-2">
                      <Users className="w-5 h-5" />
                      <span className="font-semibold">Team Size:</span> {selectedProject.teamSize}
                    </p>
                  </div>
                )}

                {/* Action Buttons */}
                <div className="flex gap-4 pt-4">
                  <a
                    href={selectedProject.github}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="flex-1 flex items-center justify-center gap-2 bg-gradient-to-r from-purple-600 to-purple-700 hover:from-purple-700 hover:to-purple-800 text-white px-6 py-3 rounded-lg font-semibold transition-all duration-300 hover:scale-105"
                  >
                    <Github className="w-5 h-5" />
                    View on GitHub
                  </a>
                  {selectedProject.demo !== '#' && (
                    <a
                      href={selectedProject.demo}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="flex-1 flex items-center justify-center gap-2 bg-gradient-to-r from-pink-600 to-pink-700 hover:from-pink-700 hover:to-pink-800 text-white px-6 py-3 rounded-lg font-semibold transition-all duration-300 hover:scale-105"
                    >
                      <ExternalLink className="w-5 h-5" />
                      Live Demo
                    </a>
                  )}
                </div>
              </div>
            </motion.div>
            </div>
          </Portal>
        )}
      </AnimatePresence>
    </>
  );
}
